<?xml version="1.0" encoding="UTF-8" ?>

<!--
    GRIDGAIN - OPEN CLOUD PLATFORM.
    COPYRIGHT (C) 2005-2008 GRIDGAIN SYSTEMS. ALL RIGHTS RESERVED.
     
    THIS IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR
    MODIFY IT UNDER THE TERMS OF THE GNU LESSER GENERAL PUBLIC
    LICENSE AS PUBLISHED BY THE FREE SOFTWARE FOUNDATION; EITHER
    VERSION 2.1 OF THE LICENSE, OR (AT YOUR OPTION) ANY LATER 
    VERSION.
    
    THIS LIBRARY IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL,
    BUT WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
    MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.  SEE THE 
    GNU LESSER GENERAL PUBLIC LICENSE FOR MORE DETAILS.
     
    YOU SHOULD HAVE RECEIVED A COPY OF THE GNU LESSER GENERAL PUBLIC
    LICENSE ALONG WITH THIS LIBRARY; IF NOT, WRITE TO THE FREE 
    SOFTWARE FOUNDATION, INC., 51 FRANKLIN ST, FIFTH FLOOR, BOSTON, MA  
    02110-1301 USA
-->

<project default="build.gar" name="GridGain 2.1.1 GAR">
    <description>
        GridGain GAR build script.
    </description>

    <property environment="env"/>

    <!--
        Ensure all necessary external properties are set.
    -->
    <fail unless="env.GRIDGAIN_HOME"
        message="Environment variable GRIDGAIN_HOME must be set to svn root of GridGrid project."/>
	
	<property name="model.dir" value="${env.PROJECT}"/>
	<property name="model.bin.dir" value="${env.PROJECT}/bin"/>
	<property name="repast.dir" value="${env.WORKSPACE}"/>
    <property name="base.dir" value="${env.GRIDGAIN_HOME}"/>
    <property name="examples.gar.dir" value="${base.dir}/examples/gar"/>
    <property name="examples.gar.src.dir" value="${examples.gar.dir}/src"/>
	<property name="examples.gar.bin.dir" value="${repast.dir}/repast.simphony.distributedBatch/bin"/>
    <property name="examples.gar.deploy.dir" value="${base.dir}/work/deployment/file"/>
    <property name="libs.dir" value="${base.dir}/libs"/>
    <property name="gar.name" value="distributed.gar"/>
	<property name="batch.name" value="${env.BATCH_XML}"/>
	<property name="rs.name" value="${env.RS_FOLDER}"/>
	
    <!--
        Libraries.
    -->
	<!--<copy todir="${model.dir}">
	        	<fileset dir="${model.dir}/${batch.name}">
	        		<include name="*.xml"/>
	            </fileset>
	 			<fileset dir="${model.dir}/${rs.name}">
	 		        		<include name="*.xml"/>
	 		     </fileset>
	</copy>-->
	
	<path id="gg.libs.path">
	        <fileset id="gg.libs" dir="${libs.dir}">
	            <include name="*.jar"/>
	        </fileset>
	        <fileset dir="${base.dir}">
	            <include name="gridgain*.jar"/>
	        </fileset>
	    </path>

    <!--
        Builds GAR file.
    -->
    <target name="build.gar">
        <!-- Trace. -->
        <echo message=""/>
        <echo message="== Building GAR =="/>

        <!-- Cleanup the destination temp binary directory. -->
        <delete dir="${examples.gar.deploy.dir}"/>
        <mkdir dir="${examples.gar.deploy.dir}/classes"/>

        <!-- Compile the examples code. -->
        <javac target="1.6" source="1.6" srcdir="${repast.dir}"
            destdir="${examples.gar.deploy.dir}" debug="true"
            nowarn="off">
            <classpath>
                <path refid="gg.libs.path"/>
            </classpath>
            <include name="/repast.simphony.distributedBatch/repast/simphony/batch/data/*.java"/>
        	<include name="/repast.simphony.distributedBatch/repast/simphony/batch/disributed/*.java"/>
        	<include name="/repast.simphony.distributedBatch/repast/simphony/batch/gridgain/*.java"/>
        	<include name="/repast.simphony.distributedBatch/repast/simphony/batch/setup/*.java"/>
        </javac>

        <!-- Create the destination temp binary gar directory where files placed according GAR hierarchy. -->
        <delete dir="${examples.gar.deploy.dir}/tmpgar"/>
        <mkdir dir="${examples.gar.deploy.dir}/tmpgar"/>

        <!-- Copy task classes and used resources. -->
        <copy todir="${examples.gar.deploy.dir}/tmpgar">
        	 <fileset dir="${examples.gar.bin.dir}">
                <include name="repast/simphony/batch/**/*.class"/>
          		<include name="repast/simphony/batch/data/*.class"/>
        	 	<include name="repast/simphony/batch/distributed/*.class"/>
        	 	<include name="repast/simphony/batch/gridgain/*.class"/>
        	 	<include name="repast/simphony/batch/setup/*.class"/>
        	 	<include name="repast/simphony/batch/distributed/repast.simphony.batch.jar"/>
            </fileset>
             <fileset dir="${model.bin.dir}">
             	<include name="**/*.class"/>
             </fileset>
            <fileset dir="${repast.dir}">
                <include name="/repast.simphony.distributedBatch/gar/gar-spring-bean.xml"/>
            </fileset>
        </copy>

        <mkdir dir="${examples.gar.deploy.dir}/tmpgar/META-INF"/>

        <!--
            Imported JAR used to show where imported dependencies may be placed in GAR file.
        -->
        <mkdir dir="${examples.gar.deploy.dir}/tmpgar/lib/dependlib"/>

        <!-- Prepare structure for creation imported jar file. -->
    	 <copy todir="${examples.gar.deploy.dir}/tmpgar">
        	<fileset dir="${repast.dir}/repast.simphony.distributedBatch/transferFiles">
        	      <include name="*.jar"/>
        	</fileset>
        </copy>

        <!-- Create imported jar file. -->
        <jar destfile="${examples.gar.deploy.dir}/tmpgar/lib/depend.jar"
            basedir="${examples.gar.deploy.dir}/tmpgar/lib/dependlib">
        </jar>

        <delete dir="${examples.gar.deploy.dir}/tmpgar/lib/dependlib"/>

        <!--
            Special task for creating GAR files.
        -->
        <taskdef name="gar" classname="org.gridgain.grid.tools.ant.gar.GridGarAntTask"
            classpathref="gg.libs.path"/>

    	 <!-- Create GAR file. -->
    	 <gar destfile="${examples.gar.deploy.dir}/${gar.name}"
    	     descrdir="${repast.dir}/repast.simphony.distributedBatch/gar/META-INF"
    	     basedir="${examples.gar.deploy.dir}/tmpgar"/>

    	 <!-- Cleanup temporary binary directories. -->
    	 <delete dir="${examples.gar.deploy.dir}/tmpgar"/>
    	 <delete dir="${examples.gar.deploy.dir}/classes"/>
    </target>
</project>
